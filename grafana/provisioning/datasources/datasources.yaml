apiVersion: 1

datasources:
  - name: Loki
    type: loki
    access: proxy
    uid: loki
    url: http://loki:3100
    jsonData:
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: "(?:trace(?:Id|ID|_?id)|(?:^|\\s+)tid)[:=]\\s*(\\w+)"
          name: traceId
          url: "$${__value.raw}"

  - name: Tempo
    type: tempo
    access: proxy
    uid: tempo
    url: http://tempo:3200
    jsonData:
      nodeGraph:
        enabled: true
      serviceMap:
        datasourceUid: "Mimir"
      tracesToLogs:
        datasourceUid: loki
        filterByTraceID: ture
        spanEndTimeShift: "500ms"
        spanStartTimeShift: "-500ms"
        tags: ["beast"]
      traceToMetrics:
        datasourceUid: "Mimir"
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        tags: [{ key: "service.name", value: "service" }, { key: "job" }]
        queries:
          - name: "Request Rate"
            query: "rate(traces_spanmetrics_calls_total{$__tags}[$__rate_interval])"
          - name: "Error Rate"
            query: 'rate(traces_spanmetrics_calls_total{$__tags,status_code="STATUS_CODE_ERROR"}[$__rate_interval])'
    # correlations:
    #   - targetUID: postgres
    #     label: "Count $$beast in table"
    #     description: ""
    #     config:
    #       type: query
    #       field: tags
    #       target:
    #         editorMode: code
    #         format: table
    #         rawQuery: true
    #         rawSql: "SELECT COUNT(*) FROM $$beast;"
    #         refId: A
    #         sql:
    #           columns:
    #             - parameters: []
    #               type: function
    #           groupBy:
    #             - property:
    #                 type: string
    #               type: groupBy
    #           limit: 50
    #       transformations:
    #         - type: regex
    #           expression: .*{"value":"(.*?)","key":"beast".*}
    #           mapValue: beast
    #   - targetUID: postgres
    #     label: "$$statement"
    #     description: "Runs the found DB statement in the span"
    #     config:
    #       type: query
    #       field: tags
    #       target:
    #         editorMode: code
    #         filters:
    #           - operator: "="
    #             scope: span
    #         format: table
    #         limit: 20
    #         queryType: traceqlSearch
    #         rawQuery: true
    #         rawSql: "$$statement;"
    #         refId: A
    #         sql:
    #           columns:
    #             - parameters: []
    #               type: function
    #           groupBy:
    #             - property:
    #                 type: string
    #               type: groupBy
    #           limit: 50
    #       transformations:
    #         - type: regex
    #           expression: .*{"value":"(.*?)","key":"db.statement".*}
    #           mapValue: statement
  - name: Mimir
    type: prometheus
    access: proxy
    uid: mimir
    url: http://mimir:9009/prometheus
    jsonData:
      exemplarTraceIdDestinations:
        - datasourceUid: tempo
          name: traceID
      httpMethod: POST
      timeInterval: "2s"

  - name: Postgres
    type: postgres
    uid: postgres
    url: mythical-database:5432
    user: postgres
    jsonData:
      database: postgres
      sslmode: disable
      postgresVersion: 1400
    secureJsonData:
      password: mythical
