local.file_match "applogs" {
    path_targets = [{"__path__" = "/tmp/app-logs/app.log"}]
    sync_period = "5s"
}

loki.write "local_loki" {
    endpoint {
        url = "http://loki:3100/loki/api/v1/push"
    }
}

loki.source.file "local_files" {
    targets    = local.file_match.applogs.targets
    forward_to = [loki.process.add_new_label.receiver]
}


loki.process "add_new_label" {
    stage.logfmt {
        mapping = {
            "extracted_level" = "level",
            "extracted_logger" = "logger",
        }
    }

    stage.labels {
        values = {
            "level" = "extracted_level",
            "logger" = "extracted_logger",
        }
    }
     forward_to = [loki.write.local_loki.receiver]
}


otelcol.receiver.otlp "otlp_receiver" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    traces = [otelcol.exporter.otlp.grafanacloud.input,]
  }
}

otelcol.exporter.otlp "grafanacloud" {
  client {
    endpoint = "tempo:4317"
    tls {
			insecure = true
		}
  }
}

prometheus.scrape "app_server" {
  targets = [
    {
      __address__ = "server:5000",
    },
  ]
  forward_to     = [prometheus.remote_write.mimir.receiver]
  job_name       = "app-server"
  scrape_timeout = "60s"
}

prometheus.remote_write "mimir" { 
  endpoint {
    name = "grafana-mimir"
    url  = "http://mimir:9009/api/v1/push"
  }
}