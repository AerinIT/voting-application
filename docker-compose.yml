version: '3'
services:
  server:
    build:
      context: ./voting-app-server
    container_name: voting-app-server
    ports:
      - "5000:5000"
    volumes:
      - server-data:/app/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - voting-app-network

  client:
    build:
      context: ./voting-app-client
    container_name: voting-app-client
    ports:
      - "3001:3001"
    volumes:
      - client-data:/usr/share/nginx/html
    networks:
      - voting-app-network

  redis:
    image: "redis:alpine"
    container_name: voting-app-redis
    ports:
      - "6379:6379"
    networks:
      - voting-app-network

  nginx:
    image: nginx:alpine
    container_name: voting-app-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - server
    networks:
      - voting-app-network
  
  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
    ports:
      - "12345:12345"
    command:
      - run
      - /etc/alloy/config.alloy
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
    depends_on:
      - loki
      - tempo
      - mimir
    networks:
      - voting-app-network

  loki:
    image: grafana/loki:main
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:2.4.1
    restart: on-failure
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3100"
    networks:
      - voting-app-network

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    ports:
      - "9009:9009"
    volumes:
      - ./mimir/mimir-config.yaml:/etc/mimir/mimir.yaml
    command:
      - --config.file=/etc/mimir/mimir.yaml
    networks:
      - voting-app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    command:
      - --config=/etc/grafana-config/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_BASIC_ENABLED=false
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana-config/grafana.ini
    depends_on:
      - mimir
      - loki
      - tempo
    networks:
      - voting-app-network

networks:
  voting-app-network:
    driver: bridge

volumes:
  server-data:
  client-data:
  grafana-data:
