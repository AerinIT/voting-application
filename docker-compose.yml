version: '3'
services:
  server:
    build:
      context: ./voting-app-server
    container_name: voting-app-server
    ports:
      - "5000:5000"
    volumes:
      - server-data:/app/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - voting-app-network

  client:
    build:
      context: ./voting-app-client
    container_name: voting-app-client
    ports:
      - "3001:3001"
    volumes:
      - client-data:/usr/share/nginx/html
    networks:
      - voting-app-network

  redis:
    image: "redis:alpine"
    container_name: voting-app-redis
    ports:
      - "6379:6379"
    networks:
      - voting-app-network

  nginx:
    image: nginx:alpine
    container_name: voting-app-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - server
    networks:
      - voting-app-network

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    ports:
      - "12345:12345"
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
    environment:
      LOKI_HOST: http://localhost:3100
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    depends_on:
      - loki
      - tempo
      - mimir
    networks:
      - voting-app-network
  
  loki:
    image: grafana/loki:3.0.0
    restart: on-failure
    ports:
      - "3100:3100"
    networks:
      - voting-app-network 

  tempo:
    image: grafana/tempo:2.4.1
    restart: on-failure
    command:
      - "-storage.trace.backend=local"
      - "-storage.trace.local.path=/tmp/tempo/traces"
      - "-storage.trace.wal.path=/tmp/tempo/wal"
      - "-auth.enabled=false"
      - "-server.http-listen-port=3200"
    ports:
      - "3200:3200"
      - "4317:4317"
    networks:
      - voting-app-network

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    restart: on-failure
    volumes:
      - ./mimir/mimir-config.yaml:/etc/mimir/mimir.yaml
    command:
      - --config.file=/etc/mimir/mimir.yaml
    ports:
      - "9009:9009"
    networks:
      - voting-app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    command:
      - --config=/etc/grafana-config/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-synthetic-monitoring-app
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ./synthetic-monitoring.yaml:/etc/grafana/provisioning/plugins/synthetic-monitoring.yaml
    user: "1000:1000"
    depends_on:
      - mimir
      - loki
      - tempo
    networks:
      - voting-app-network

  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - name=value
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=12345678
      - DOCKER_INFLUXDB_INIT_ORG=grafana
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
    user: "1000:1000"
    volumes:
      - influxdb-data:/var/lib/influxdb 
    networks:
      - voting-app-network
  
  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    user: root
    entrypoint: /bin/bash -c "chmod 777 /var/run/docker.sock && /entrypoint.sh telegraf"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostfs
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
    depends_on:
      - influxdb
    links:
      - influxdb 
    ports:
      - "8125:8125"
    networks:
      - voting-app-network

networks:
  voting-app-network:
    driver: bridge

volumes:
  server-data:
  client-data:
  grafana-data:
  influxdb-data: